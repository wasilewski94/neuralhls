

================================================================
== Vivado HLS Report for 'calcPerceptron'
================================================================
* Date:           Tue Sep 22 23:46:33 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        simple_perceptron
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.677 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1     |        ?|        ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1  |        ?|        ?|        11|          -|          -|     ?|    no    |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 49
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 14 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 3 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([784 x float]* %x) nounwind, !map !84"   --->   Operation 50 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([12704 x float]* %w) nounwind, !map !90"   --->   Operation 51 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([26 x float]* %b) nounwind, !map !96"   --->   Operation 52 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([26 x float]* %res) nounwind, !map !102"   --->   Operation 53 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %inputs) nounwind, !map !106"   --->   Operation 54 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %neurons) nounwind, !map !112"   --->   Operation 55 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %w_offset) nounwind, !map !116"   --->   Operation 56 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %b_offset) nounwind, !map !120"   --->   Operation 57 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @calcPerceptron_str) nounwind"   --->   Operation 58 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (1.00ns)   --->   "%b_offset_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %b_offset) nounwind" [simple_perceptron/core.cpp:3]   --->   Operation 59 'read' 'b_offset_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 60 [1/1] (1.00ns)   --->   "%w_offset_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %w_offset) nounwind" [simple_perceptron/core.cpp:3]   --->   Operation 60 'read' 'w_offset_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 61 [1/1] (1.00ns)   --->   "%neurons_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %neurons) nounwind" [simple_perceptron/core.cpp:3]   --->   Operation 61 'read' 'neurons_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 62 [1/1] (1.00ns)   --->   "%inputs_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %inputs) nounwind" [simple_perceptron/core.cpp:3]   --->   Operation 62 'read' 'inputs_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_perceptron/core.cpp:5]   --->   Operation 63 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %inputs, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_perceptron/core.cpp:6]   --->   Operation 64 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %neurons, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_perceptron/core.cpp:7]   --->   Operation 65 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %w_offset, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_perceptron/core.cpp:8]   --->   Operation 66 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %b_offset, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_perceptron/core.cpp:9]   --->   Operation 67 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([784 x float]* %x, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_perceptron/core.cpp:11]   --->   Operation 68 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([12704 x float]* %w, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_perceptron/core.cpp:12]   --->   Operation 69 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([26 x float]* %res, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_perceptron/core.cpp:13]   --->   Operation 70 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([26 x float]* %b, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [simple_perceptron/core.cpp:14]   --->   Operation 71 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (1.76ns)   --->   "br label %1" [simple_perceptron/core.cpp:21]   --->   Operation 72 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.55>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%j_0 = phi i31 [ 0, %0 ], [ %j, %3 ]"   --->   Operation 73 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%phi_mul = phi i32 [ 0, %0 ], [ %add_ln21, %3 ]" [simple_perceptron/core.cpp:21]   --->   Operation 74 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (2.55ns)   --->   "%add_ln21 = add i32 %phi_mul, %inputs_read" [simple_perceptron/core.cpp:21]   --->   Operation 75 'add' 'add_ln21' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln21 = zext i31 %j_0 to i32" [simple_perceptron/core.cpp:21]   --->   Operation 76 'zext' 'zext_ln21' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (2.47ns)   --->   "%icmp_ln21 = icmp slt i32 %zext_ln21, %neurons_read" [simple_perceptron/core.cpp:21]   --->   Operation 77 'icmp' 'icmp_ln21' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (2.52ns)   --->   "%j = add i31 %j_0, 1" [simple_perceptron/core.cpp:21]   --->   Operation 78 'add' 'j' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "br i1 %icmp_ln21, label %.preheader.preheader, label %4" [simple_perceptron/core.cpp:21]   --->   Operation 79 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (1.76ns)   --->   "br label %.preheader" [simple_perceptron/core.cpp:22]   --->   Operation 80 'br' <Predicate = (icmp_ln21)> <Delay = 1.76>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "ret void" [simple_perceptron/core.cpp:29]   --->   Operation 81 'ret' <Predicate = (!icmp_ln21)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.62>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%sum_1 = phi float [ %sum, %2 ], [ 0.000000e+00, %.preheader.preheader ]"   --->   Operation 82 'phi' 'sum_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%i_0 = phi i31 [ %i, %2 ], [ 0, %.preheader.preheader ]"   --->   Operation 83 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln22 = zext i31 %i_0 to i32" [simple_perceptron/core.cpp:22]   --->   Operation 84 'zext' 'zext_ln22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (2.47ns)   --->   "%icmp_ln22 = icmp slt i32 %zext_ln22, %inputs_read" [simple_perceptron/core.cpp:22]   --->   Operation 85 'icmp' 'icmp_ln22' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (2.52ns)   --->   "%i = add i31 %i_0, 1" [simple_perceptron/core.cpp:22]   --->   Operation 86 'add' 'i' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "br i1 %icmp_ln22, label %2, label %3" [simple_perceptron/core.cpp:22]   --->   Operation 87 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln23 = zext i31 %i_0 to i64" [simple_perceptron/core.cpp:23]   --->   Operation 88 'zext' 'zext_ln23' <Predicate = (icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%x_addr = getelementptr [784 x float]* %x, i64 0, i64 %zext_ln23" [simple_perceptron/core.cpp:23]   --->   Operation 89 'getelementptr' 'x_addr' <Predicate = (icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 90 [2/2] (3.25ns)   --->   "%x_load = load float* %x_addr, align 4" [simple_perceptron/core.cpp:23]   --->   Operation 90 'load' 'x_load' <Predicate = (icmp_ln22)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 26> <RAM>
ST_3 : Operation 91 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln23 = add i32 %zext_ln22, %w_offset_read" [simple_perceptron/core.cpp:23]   --->   Operation 91 'add' 'add_ln23' <Predicate = (icmp_ln22)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 92 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln23_1 = add i32 %add_ln23, %phi_mul" [simple_perceptron/core.cpp:23]   --->   Operation 92 'add' 'add_ln23_1' <Predicate = (icmp_ln22)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%sext_ln23 = sext i32 %add_ln23_1 to i64" [simple_perceptron/core.cpp:23]   --->   Operation 93 'sext' 'sext_ln23' <Predicate = (icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%w_addr = getelementptr [12704 x float]* %w, i64 0, i64 %sext_ln23" [simple_perceptron/core.cpp:23]   --->   Operation 94 'getelementptr' 'w_addr' <Predicate = (icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 95 [2/2] (3.25ns)   --->   "%w_load = load float* %w_addr, align 4" [simple_perceptron/core.cpp:23]   --->   Operation 95 'load' 'w_load' <Predicate = (icmp_ln22)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 26> <RAM>
ST_3 : Operation 96 [1/1] (2.55ns)   --->   "%add_ln25 = add nsw i32 %zext_ln21, %b_offset_read" [simple_perceptron/core.cpp:25]   --->   Operation 96 'add' 'add_ln25' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%sext_ln25 = sext i32 %add_ln25 to i64" [simple_perceptron/core.cpp:25]   --->   Operation 97 'sext' 'sext_ln25' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%b_addr = getelementptr [26 x float]* %b, i64 0, i64 %sext_ln25" [simple_perceptron/core.cpp:25]   --->   Operation 98 'getelementptr' 'b_addr' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 99 [2/2] (2.32ns)   --->   "%b_load = load float* %b_addr, align 4" [simple_perceptron/core.cpp:25]   --->   Operation 99 'load' 'b_load' <Predicate = (!icmp_ln22)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 26> <RAM>

State 4 <SV = 3> <Delay = 3.25>
ST_4 : Operation 100 [1/2] (3.25ns)   --->   "%x_load = load float* %x_addr, align 4" [simple_perceptron/core.cpp:23]   --->   Operation 100 'load' 'x_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 26> <RAM>
ST_4 : Operation 101 [1/2] (3.25ns)   --->   "%w_load = load float* %w_addr, align 4" [simple_perceptron/core.cpp:23]   --->   Operation 101 'load' 'w_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 26> <RAM>

State 5 <SV = 4> <Delay = 5.70>
ST_5 : Operation 102 [4/4] (5.70ns)   --->   "%tmp = fmul float %x_load, %w_load" [simple_perceptron/core.cpp:23]   --->   Operation 102 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.70>
ST_6 : Operation 103 [3/4] (5.70ns)   --->   "%tmp = fmul float %x_load, %w_load" [simple_perceptron/core.cpp:23]   --->   Operation 103 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 5.70>
ST_7 : Operation 104 [2/4] (5.70ns)   --->   "%tmp = fmul float %x_load, %w_load" [simple_perceptron/core.cpp:23]   --->   Operation 104 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 5.70>
ST_8 : Operation 105 [1/4] (5.70ns)   --->   "%tmp = fmul float %x_load, %w_load" [simple_perceptron/core.cpp:23]   --->   Operation 105 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.25>
ST_9 : Operation 106 [5/5] (7.25ns)   --->   "%sum = fadd float %sum_1, %tmp" [simple_perceptron/core.cpp:23]   --->   Operation 106 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.25>
ST_10 : Operation 107 [4/5] (7.25ns)   --->   "%sum = fadd float %sum_1, %tmp" [simple_perceptron/core.cpp:23]   --->   Operation 107 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.25>
ST_11 : Operation 108 [3/5] (7.25ns)   --->   "%sum = fadd float %sum_1, %tmp" [simple_perceptron/core.cpp:23]   --->   Operation 108 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.25>
ST_12 : Operation 109 [2/5] (7.25ns)   --->   "%sum = fadd float %sum_1, %tmp" [simple_perceptron/core.cpp:23]   --->   Operation 109 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 7.25>
ST_13 : Operation 110 [1/5] (7.25ns)   --->   "%sum = fadd float %sum_1, %tmp" [simple_perceptron/core.cpp:23]   --->   Operation 110 'fadd' 'sum' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 111 [1/1] (0.00ns)   --->   "br label %.preheader" [simple_perceptron/core.cpp:22]   --->   Operation 111 'br' <Predicate = true> <Delay = 0.00>

State 14 <SV = 3> <Delay = 2.32>
ST_14 : Operation 112 [1/2] (2.32ns)   --->   "%b_load = load float* %b_addr, align 4" [simple_perceptron/core.cpp:25]   --->   Operation 112 'load' 'b_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 26> <RAM>

State 15 <SV = 4> <Delay = 7.25>
ST_15 : Operation 113 [5/5] (7.25ns)   --->   "%tmp_2 = fadd float %sum_1, %b_load" [simple_perceptron/core.cpp:25]   --->   Operation 113 'fadd' 'tmp_2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 5> <Delay = 7.25>
ST_16 : Operation 114 [4/5] (7.25ns)   --->   "%tmp_2 = fadd float %sum_1, %b_load" [simple_perceptron/core.cpp:25]   --->   Operation 114 'fadd' 'tmp_2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 6> <Delay = 7.25>
ST_17 : Operation 115 [3/5] (7.25ns)   --->   "%tmp_2 = fadd float %sum_1, %b_load" [simple_perceptron/core.cpp:25]   --->   Operation 115 'fadd' 'tmp_2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 7> <Delay = 7.25>
ST_18 : Operation 116 [2/5] (7.25ns)   --->   "%tmp_2 = fadd float %sum_1, %b_load" [simple_perceptron/core.cpp:25]   --->   Operation 116 'fadd' 'tmp_2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 8> <Delay = 7.25>
ST_19 : Operation 117 [1/5] (7.25ns)   --->   "%tmp_2 = fadd float %sum_1, %b_load" [simple_perceptron/core.cpp:25]   --->   Operation 117 'fadd' 'tmp_2' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 9> <Delay = 8.67>
ST_20 : Operation 118 [1/1] (0.00ns)   --->   "%bitcast_ln25 = bitcast float %tmp_2 to i32" [simple_perceptron/core.cpp:25]   --->   Operation 118 'bitcast' 'bitcast_ln25' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 119 [1/1] (0.99ns)   --->   "%xor_ln25 = xor i32 %bitcast_ln25, -2147483648" [simple_perceptron/core.cpp:25]   --->   Operation 119 'xor' 'xor_ln25' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 120 [1/1] (0.00ns)   --->   "%bitcast_ln25_1 = bitcast i32 %xor_ln25 to float" [simple_perceptron/core.cpp:25]   --->   Operation 120 'bitcast' 'bitcast_ln25_1' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 121 [9/9] (7.68ns)   --->   "%tmp_i_i = call float @llvm.exp.f32(float %bitcast_ln25_1) nounwind" [/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25]   --->   Operation 121 'fexp' 'tmp_i_i' <Predicate = true> <Delay = 7.68> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 8> <II = 1> <Delay = 7.68> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 21 <SV = 10> <Delay = 7.68>
ST_21 : Operation 122 [8/9] (7.68ns)   --->   "%tmp_i_i = call float @llvm.exp.f32(float %bitcast_ln25_1) nounwind" [/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25]   --->   Operation 122 'fexp' 'tmp_i_i' <Predicate = true> <Delay = 7.68> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 8> <II = 1> <Delay = 7.68> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 22 <SV = 11> <Delay = 7.68>
ST_22 : Operation 123 [7/9] (7.68ns)   --->   "%tmp_i_i = call float @llvm.exp.f32(float %bitcast_ln25_1) nounwind" [/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25]   --->   Operation 123 'fexp' 'tmp_i_i' <Predicate = true> <Delay = 7.68> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 8> <II = 1> <Delay = 7.68> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 23 <SV = 12> <Delay = 7.68>
ST_23 : Operation 124 [6/9] (7.68ns)   --->   "%tmp_i_i = call float @llvm.exp.f32(float %bitcast_ln25_1) nounwind" [/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25]   --->   Operation 124 'fexp' 'tmp_i_i' <Predicate = true> <Delay = 7.68> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 8> <II = 1> <Delay = 7.68> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 24 <SV = 13> <Delay = 7.68>
ST_24 : Operation 125 [5/9] (7.68ns)   --->   "%tmp_i_i = call float @llvm.exp.f32(float %bitcast_ln25_1) nounwind" [/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25]   --->   Operation 125 'fexp' 'tmp_i_i' <Predicate = true> <Delay = 7.68> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 8> <II = 1> <Delay = 7.68> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 25 <SV = 14> <Delay = 7.68>
ST_25 : Operation 126 [4/9] (7.68ns)   --->   "%tmp_i_i = call float @llvm.exp.f32(float %bitcast_ln25_1) nounwind" [/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25]   --->   Operation 126 'fexp' 'tmp_i_i' <Predicate = true> <Delay = 7.68> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 8> <II = 1> <Delay = 7.68> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 26 <SV = 15> <Delay = 7.68>
ST_26 : Operation 127 [3/9] (7.68ns)   --->   "%tmp_i_i = call float @llvm.exp.f32(float %bitcast_ln25_1) nounwind" [/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25]   --->   Operation 127 'fexp' 'tmp_i_i' <Predicate = true> <Delay = 7.68> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 8> <II = 1> <Delay = 7.68> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 27 <SV = 16> <Delay = 7.68>
ST_27 : Operation 128 [2/9] (7.68ns)   --->   "%tmp_i_i = call float @llvm.exp.f32(float %bitcast_ln25_1) nounwind" [/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25]   --->   Operation 128 'fexp' 'tmp_i_i' <Predicate = true> <Delay = 7.68> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 8> <II = 1> <Delay = 7.68> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 28 <SV = 17> <Delay = 7.68>
ST_28 : Operation 129 [1/9] (7.68ns)   --->   "%tmp_i_i = call float @llvm.exp.f32(float %bitcast_ln25_1) nounwind" [/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25]   --->   Operation 129 'fexp' 'tmp_i_i' <Predicate = true> <Delay = 7.68> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 8> <II = 1> <Delay = 7.68> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 29 <SV = 18> <Delay = 7.25>
ST_29 : Operation 130 [5/5] (7.25ns)   --->   "%tmp_5 = fadd float %tmp_i_i, 1.000000e+00" [simple_perceptron/core.cpp:25]   --->   Operation 130 'fadd' 'tmp_5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 19> <Delay = 7.25>
ST_30 : Operation 131 [4/5] (7.25ns)   --->   "%tmp_5 = fadd float %tmp_i_i, 1.000000e+00" [simple_perceptron/core.cpp:25]   --->   Operation 131 'fadd' 'tmp_5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 20> <Delay = 7.25>
ST_31 : Operation 132 [3/5] (7.25ns)   --->   "%tmp_5 = fadd float %tmp_i_i, 1.000000e+00" [simple_perceptron/core.cpp:25]   --->   Operation 132 'fadd' 'tmp_5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 21> <Delay = 7.25>
ST_32 : Operation 133 [2/5] (7.25ns)   --->   "%tmp_5 = fadd float %tmp_i_i, 1.000000e+00" [simple_perceptron/core.cpp:25]   --->   Operation 133 'fadd' 'tmp_5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 22> <Delay = 7.25>
ST_33 : Operation 134 [1/5] (7.25ns)   --->   "%tmp_5 = fadd float %tmp_i_i, 1.000000e+00" [simple_perceptron/core.cpp:25]   --->   Operation 134 'fadd' 'tmp_5' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 23> <Delay = 6.07>
ST_34 : Operation 135 [16/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 135 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 24> <Delay = 6.07>
ST_35 : Operation 136 [15/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 136 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 25> <Delay = 6.07>
ST_36 : Operation 137 [14/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 137 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 26> <Delay = 6.07>
ST_37 : Operation 138 [13/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 138 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 27> <Delay = 6.07>
ST_38 : Operation 139 [12/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 139 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 28> <Delay = 6.07>
ST_39 : Operation 140 [11/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 140 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 29> <Delay = 6.07>
ST_40 : Operation 141 [10/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 141 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 30> <Delay = 6.07>
ST_41 : Operation 142 [9/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 142 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 31> <Delay = 6.07>
ST_42 : Operation 143 [8/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 143 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 43 <SV = 32> <Delay = 6.07>
ST_43 : Operation 144 [7/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 144 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 33> <Delay = 6.07>
ST_44 : Operation 145 [6/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 145 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 34> <Delay = 6.07>
ST_45 : Operation 146 [5/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 146 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 35> <Delay = 6.07>
ST_46 : Operation 147 [4/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 147 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 47 <SV = 36> <Delay = 6.07>
ST_47 : Operation 148 [3/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 148 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 48 <SV = 37> <Delay = 6.07>
ST_48 : Operation 149 [2/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 149 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 49 <SV = 38> <Delay = 8.39>
ST_49 : Operation 150 [1/16] (6.07ns)   --->   "%tmp_6 = fdiv float 1.000000e+00, %tmp_5" [simple_perceptron/core.cpp:25]   --->   Operation 150 'fdiv' 'tmp_6' <Predicate = true> <Delay = 6.07> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln25 = zext i31 %j_0 to i64" [simple_perceptron/core.cpp:25]   --->   Operation 151 'zext' 'zext_ln25' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 152 [1/1] (0.00ns)   --->   "%res_addr = getelementptr [26 x float]* %res, i64 0, i64 %zext_ln25" [simple_perceptron/core.cpp:25]   --->   Operation 152 'getelementptr' 'res_addr' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 153 [1/1] (2.32ns)   --->   "store float %tmp_6, float* %res_addr, align 4" [simple_perceptron/core.cpp:25]   --->   Operation 153 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 26> <RAM>
ST_49 : Operation 154 [1/1] (0.00ns)   --->   "br label %1" [simple_perceptron/core.cpp:21]   --->   Operation 154 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', simple_perceptron/core.cpp:21) [33]  (1.77 ns)

 <State 2>: 2.55ns
The critical path consists of the following:
	'phi' operation ('phi_mul', simple_perceptron/core.cpp:21) with incoming values : ('add_ln21', simple_perceptron/core.cpp:21) [34]  (0 ns)
	'add' operation ('add_ln21', simple_perceptron/core.cpp:21) [35]  (2.55 ns)

 <State 3>: 7.62ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', simple_perceptron/core.cpp:22) [44]  (0 ns)
	'add' operation ('add_ln23', simple_perceptron/core.cpp:23) [53]  (0 ns)
	'add' operation ('add_ln23_1', simple_perceptron/core.cpp:23) [54]  (4.37 ns)
	'getelementptr' operation ('w_addr', simple_perceptron/core.cpp:23) [56]  (0 ns)
	'load' operation ('w_load', simple_perceptron/core.cpp:23) on array 'w' [57]  (3.25 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'load' operation ('x_load', simple_perceptron/core.cpp:23) on array 'x' [52]  (3.25 ns)

 <State 5>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp', simple_perceptron/core.cpp:23) [58]  (5.7 ns)

 <State 6>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp', simple_perceptron/core.cpp:23) [58]  (5.7 ns)

 <State 7>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp', simple_perceptron/core.cpp:23) [58]  (5.7 ns)

 <State 8>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp', simple_perceptron/core.cpp:23) [58]  (5.7 ns)

 <State 9>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', simple_perceptron/core.cpp:23) [59]  (7.26 ns)

 <State 10>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', simple_perceptron/core.cpp:23) [59]  (7.26 ns)

 <State 11>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', simple_perceptron/core.cpp:23) [59]  (7.26 ns)

 <State 12>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', simple_perceptron/core.cpp:23) [59]  (7.26 ns)

 <State 13>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('sum', simple_perceptron/core.cpp:23) [59]  (7.26 ns)

 <State 14>: 2.32ns
The critical path consists of the following:
	'load' operation ('b_load', simple_perceptron/core.cpp:25) on array 'b' [65]  (2.32 ns)

 <State 15>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_2', simple_perceptron/core.cpp:25) [66]  (7.26 ns)

 <State 16>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_2', simple_perceptron/core.cpp:25) [66]  (7.26 ns)

 <State 17>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_2', simple_perceptron/core.cpp:25) [66]  (7.26 ns)

 <State 18>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_2', simple_perceptron/core.cpp:25) [66]  (7.26 ns)

 <State 19>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_2', simple_perceptron/core.cpp:25) [66]  (7.26 ns)

 <State 20>: 8.68ns
The critical path consists of the following:
	'xor' operation ('xor_ln25', simple_perceptron/core.cpp:25) [68]  (0.993 ns)
	'fexp' operation ('tmp_i_i', /wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25) [70]  (7.68 ns)

 <State 21>: 7.68ns
The critical path consists of the following:
	'fexp' operation ('tmp_i_i', /wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25) [70]  (7.68 ns)

 <State 22>: 7.68ns
The critical path consists of the following:
	'fexp' operation ('tmp_i_i', /wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25) [70]  (7.68 ns)

 <State 23>: 7.68ns
The critical path consists of the following:
	'fexp' operation ('tmp_i_i', /wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25) [70]  (7.68 ns)

 <State 24>: 7.68ns
The critical path consists of the following:
	'fexp' operation ('tmp_i_i', /wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25) [70]  (7.68 ns)

 <State 25>: 7.68ns
The critical path consists of the following:
	'fexp' operation ('tmp_i_i', /wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25) [70]  (7.68 ns)

 <State 26>: 7.68ns
The critical path consists of the following:
	'fexp' operation ('tmp_i_i', /wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25) [70]  (7.68 ns)

 <State 27>: 7.68ns
The critical path consists of the following:
	'fexp' operation ('tmp_i_i', /wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25) [70]  (7.68 ns)

 <State 28>: 7.68ns
The critical path consists of the following:
	'fexp' operation ('tmp_i_i', /wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/common/hls_exp_float.cpp:16->/wrk/2019.2/continuous/2019_11_06_2708876/src/products/hls/hls_lib/hlsmath/src/c++/expfloat.cpp:20->simple_perceptron/core.cpp:25) [70]  (7.68 ns)

 <State 29>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5', simple_perceptron/core.cpp:25) [71]  (7.26 ns)

 <State 30>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5', simple_perceptron/core.cpp:25) [71]  (7.26 ns)

 <State 31>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5', simple_perceptron/core.cpp:25) [71]  (7.26 ns)

 <State 32>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5', simple_perceptron/core.cpp:25) [71]  (7.26 ns)

 <State 33>: 7.26ns
The critical path consists of the following:
	'fadd' operation ('tmp_5', simple_perceptron/core.cpp:25) [71]  (7.26 ns)

 <State 34>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 35>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 36>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 37>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 38>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 39>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 40>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 41>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 42>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 43>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 44>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 45>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 46>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 47>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 48>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)

 <State 49>: 8.4ns
The critical path consists of the following:
	'fdiv' operation ('tmp_6', simple_perceptron/core.cpp:25) [72]  (6.08 ns)
	'store' operation ('store_ln25', simple_perceptron/core.cpp:25) of variable 'tmp_6', simple_perceptron/core.cpp:25 on array 'res' [75]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
